callbacks:
  best_examples:
    _target_: src.evaluation.callbacks.ExamplePredictionsLogger
    mode: best
    num_examples: 6
  early_stopping:
    _target_: pytorch_lightning.callbacks.early_stopping.EarlyStopping
    min_delta: 0
    mode: min
    monitor: val/loss
    patience: 20
  model_checkpoint:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    dirpath: hydra_logs/train/2023-04-07_12-56-12/models
    filename: best_{epoch}_{step}
    mode: min
    monitor: val/loss
    save_last: true
    save_top_k: 1
  random_examples:
    _target_: src.evaluation.callbacks.ExamplePredictionsLogger
    mode: random
    num_examples: 6
  rich_progress_bar:
    _target_: pytorch_lightning.callbacks.RichProgressBar
  worst_examples:
    _target_: src.evaluation.callbacks.ExamplePredictionsLogger
    mode: worst
    num_examples: 6
datamodule:
  _target_: src.data.datamodule.MNISTDataModule
  batch_size: 64
  data_dir: ./data
  inference_transform: null
  seed: 42
  train_transform: null
feature_extractor:
  _partial_: true
  _target_: src.architectures.feature_extractors.cnn.DeepCNN
  kernels:
  - 3
  - 3
  - 3
  out_channels:
  - 16
  - 32
  - 64
  pool_kernels:
  - 2
  - 1
  - 2
head:
  _target_: src.architectures.head.ClassificationHead
  in_dim: 128
  n_classes: 10
logger:
  _target_: src.loggers.wandb.WandbLoggerWrapper
  project_name: image_classification
  run_name: DeepCNN
  save_dir: hydra_logs/train/2023-04-07_12-56-12
model:
  _partial_: true
  _target_: src.architectures.model.ImageClassifier
  lr: 0.001
paths:
  log_dir: hydra_logs
  output_dir: /home/shate/Desktop/projects/image-classification/hydra_logs/train/2023-04-07_12-56-12
project_name: image_classification
run_name: DeepCNN
seed: 42
trainer:
  _target_: pytorch_lightning.Trainer
  accelerator: auto
  deterministic: true
  devices: 1
  max_epochs: 100
transforms:
  grey_normalize:
    inference:
      _target_: src.data.transforms.ImgNormalize
      n_channels: 1
    train:
      _target_: src.data.transforms.ImgNormalize
      n_channels: 1
  random_horizontal_flip:
    inference:
      _target_: torch.nn.Identity
    train:
      _target_: torchvision.transforms.RandomHorizontalFlip
      p: 0.5
  random_rotation:
    inference:
      _target_: torch.nn.Identity
    train:
      _target_: torchvision.transforms.RandomRotation
      degrees: 30
  to_tensor:
    inference:
      _target_: torchvision.transforms.ToTensor
    train:
      _target_: torchvision.transforms.ToTensor
